services:
  routrapp-db:
    image: postgres:16-alpine
    container_name: routrapp-db-prod
    environment:
      POSTGRES_DB: routrapp
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d routrapp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  routrapp-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: routrapp-backend-prod
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env.production
    depends_on:
      routrapp-db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  routrapp-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: routrapp-frontend-prod
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.production
    depends_on:
      routrapp-backend:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data_prod:
