services:
  routrapp-db:
    image: postgres:16-alpine
    container_name: routrapp-db
    environment:
      POSTGRES_DB: routrapp
      POSTGRES_USER: routrapp
      POSTGRES_PASSWORD: routrapp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U routrapp -d routrapp"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  routrapp-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: routrapp-backend
    ports:
      - "8080:8080"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app:delegated
      - backend_go_mod_cache:/go/pkg/mod
      - backend_go_build_cache:/root/.cache/go-build
    depends_on:
      routrapp-db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  backend_go_mod_cache:
  backend_go_build_cache:
